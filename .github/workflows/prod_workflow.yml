name: Kemenu Dark CI

on: [push]

jobs:

  test_backend:
    name: Testing Backend
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Run docker-compose
        run: docker-compose up -d
      - name: Set up JDK 15
        uses: actions/setup-java@v1
        with:
          java-version: 15
      - name: Cache local maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Test backend
        run: mvn -B clean test -pl :kemenu-admin-backend

  test_frontend:
    name: Testing Frontend Vue
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up Node 14
        uses: actions/setup-node@v2-beta
        with:
          node-version: '14'
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Test frontend
        run: |
          npm install kemenu-admin-frontend --prefix ./kemenu-admin-frontend
          npm --prefix kemenu-admin-frontend run lint
          npm --prefix kemenu-admin-frontend run test:unit
          npm --prefix kemenu-admin-frontend run build

  deploy_backend:
    name: Deploy Backend
    runs-on: ubuntu-latest
    needs: test_backend
    if: github.ref == 'refs/heads/master'
    env:
      KILL_JAVA_SH: ${{ github.workspace }}/ci/kill_java_process.sh
      JAVA_CMD_PATH: ~/jdk/bin/java
      JAR_NAME: kemenu-admin-backend-
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up JDK 15
        uses: actions/setup-java@v1
        with:
          java-version: 15
      - name: Cache local maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Create version
        run: |
          APP_RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          APP_RELEASE_VERSION=${APP_RELEASE_VERSION%"-SNAPSHOT"}
          APP_RELEASE_VERSION_ARRAY=(${APP_RELEASE_VERSION//./ })
          APP_RELEASE_VERSION_MINOR=APP_RELEASE_VERSION_ARRAY[2]
          APP_RELEASE_VERSION_MINOR=$((APP_RELEASE_VERSION_MINOR + 1))
          APP_RELEASE_VERSION="${APP_RELEASE_VERSION_ARRAY[0]}.${APP_RELEASE_VERSION_ARRAY[1]}.${APP_RELEASE_VERSION_MINOR}"
          echo "JAR_NAME=$JAR_NAME$APP_RELEASE_VERSION-SNAPSHOT.jar" >> $GITHUB_ENV
          echo "RELEASE VERSION: ${APP_RELEASE_VERSION}-SNAPSHOT"
          echo $APP_RELEASE_VERSION > ~/APP_RELEASE_VERSION.txt
          mvn -B --batch-mode release:update-versions -DdevelopmentVersion=$APP_RELEASE_VERSION-SNAPSHOT
      - name: Upload version
        uses: actions/upload-artifact@v2
        with:
          name: APP_RELEASE_VERSION
          path: ~/APP_RELEASE_VERSION.txt
      - name: Build
        run: mvn -B clean package -Dmaven.test.skip=true -pl :kemenu-admin-backend
      - name: Prepare SSH Keys
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PRIVATE_CLIENT_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "${{ secrets.SERVER_PUB_KEY }}" > ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts
      - name: Kill java process
        run: |
          ssh -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} 'bash -s' < $KILL_JAVA_SH
      - name: Removing old jar
        run: |
          ssh -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} "rm -rf kemenu-admin-backend-*.jar"
      - name: Copy jar to server
        run: |
          rsync -avzhe 'ssh -p ${{ secrets.PORT }}' ${{ github.workspace }}/kemenu-admin-backend/target/$JAR_NAME ${{ secrets.USERNAME }}@${{ secrets.HOST }}:~
      - name: Launch app
        run: |
          ssh -f -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} "export MONGO_DB_USER_KEMENU=${{ secrets.MONGO_DB_USER_KEMENU }} && export MONGO_DB_PWD_KEMENU=${{ secrets.MONGO_DB_PWD_KEMENU }} && export MONGO_DB_NAME_KEMENU=${{ secrets.MONGO_DB_NAME_KEMENU }} && export FIRST_ADMIN_PASSWORD=${{ secrets.FIRST_ADMIN_PASSWORD }} && export JWT_SECRET_REFRESH=${{ secrets.JWT_SECRET_REFRESH }} && export JWT_SECRET=${{ secrets.JWT_SECRET }} && export RECAPTCHA_SECRET=${{ secrets.RECAPTCHA_SECRET }} && export CLOUDINARY_KEY=${{ secrets.CLOUDINARY_KEY }} && export CLOUDINARY_SECRET=${{ secrets.CLOUDINARY_SECRET }} && export CLOUDINARY_CLOUDNAME=${{ secrets.CLOUDINARY_CLOUDNAME }} && $JAVA_CMD_PATH -Xms256M -Xmx2G -jar $JAR_NAME &"
      - name: Commit version
        run: |
          git config --global user.name 'Nicolas Vargas Ortega'
          git config --global user.email 'soasada@users.noreply.github.com'
          git commit -am "CI/CD: $JAR_NAME artifact deployed"
          git pull origin master
          git push

  deploy_frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    needs: test_frontend
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up Node 14
        uses: actions/setup-node@v2-beta
        with:
          node-version: '14'
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Build frontend
        run: |
          npm install kemenu-admin-frontend --prefix ./kemenu-admin-frontend
          npm --prefix kemenu-admin-frontend run build
      - name: Prepare SSH Keys
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PRIVATE_CLIENT_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "${{ secrets.SERVER_PUB_KEY }}" > ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts
      - name: Copy frontend to server
        run: |
          rsync -avzhe 'ssh -p ${{ secrets.PORT }}' ${{ github.workspace }}/kemenu-admin-frontend/target/dist ${{ secrets.USERNAME }}@${{ secrets.HOST }}:~

  make_release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [deploy_backend, deploy_frontend]
    if: github.ref == 'refs/heads/master'
    env:
      APP_RELEASE_V: v
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Download Version
        uses: actions/download-artifact@v2
        with:
          name: APP_RELEASE_VERSION
      - shell: bash
        run: |
          APP_RELEASE_VERSION=`cat APP_RELEASE_VERSION.txt`
          echo "APP_RELEASE_V=$APP_RELEASE_VERSION" >> $GITHUB_ENV
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.APP_RELEASE_V }}
          release_name: Release ${{ env.APP_RELEASE_V }}
          body: |
            Please refer to [CHANGELOG.md](https://github.com/soasada/kemenu-dark/blob/master/CHANGELOG.md) for details.
          draft: false
          prerelease: false